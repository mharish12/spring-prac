plugins {
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "com.moowork.node" version "1.3.1"
    id 'maven-publish'
}

archivesBaseName = 'spring-prac'

bootJar {
    manifest {
        attributes 'Main-Class' : 'com.h12.ecommerce.MainApplication'
    }
}


publishing {

    publications {
        pluginJar(MavenPublication) {
            groupId "com.h12.ecommerce"
            version '0.0.1-SNAPSHOT'
            artifactId "ecommerce-application"
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/mharish12/spring-prac"
            credentials {
                username = "harish9493566217@gmail.com"
                password = ""
            }
        }
    }
}

//tasks.register("testingForEnv") {
//    print(System.getenv("GITHUB_USER"))
//}

jacocoTestCoverageVerification {
    violationRules {
        // Rule specific to the Service
        rule {
            element = 'CLASS'
            /*
            limit {
                counter = 'INSTRUCTION'
                minimum = 0.16
            }
             */

            limit {
                counter = 'LINE'
                minimum = 0.8
            }

            //limit {
            // counter = 'COMPLEXITY'
            // minimum = 0.5
            //}

            //limit {
            // counter = 'METHOD'
            // minimum = 0.5
            //}

            excludes = [

            ]
        }
    }
}

//bootRun {
// systemProperties = System.properties
//}

dependencies {
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.8'
    implementation 'junit:junit:4.13.2'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'


    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    implementation(group: 'javax.inject', name: 'javax.inject', version: '1')
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    testImplementation('org.springframework.boot:spring-boot-starter-test')


    implementation 'org.hibernate.validator:hibernate-validator:6.1.3.Final'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    //implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //implementation 'io.prometheus:simpleclient:0.16.0'
    //implementation 'io.micrometer:micrometer-registry-prometheus:1.8.5'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
//    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.3.1'
//    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.3.1'

//    testImplementation group: 'com.h2database', name: 'h2', version: '2.2.220'
}

tasks.register("prepareKotlinBuildScriptModel"){}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

jar {
    enabled = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//    manifest {
//        attributes "Main-Class": "com.h12.ecommerce.MainApplication"
//    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { {
            if(!it.name.contains("log4j") && !it.name.contains("slf4j")
            ) {
                it.isDirectory() ? it : zipTree(it)
            }
        }
        }
    }
}